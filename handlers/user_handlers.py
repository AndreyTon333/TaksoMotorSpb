from aiogram import F, Router
from aiogram.filters import Command, CommandStart, StateFilter
from aiogram.types import Message
from aiogram.fsm.state import State, default_state, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.memory import MemoryStorage
from keyboards.keyboards import kb_b_doctors, kb_main, kb_b_stations, kb_contact_location_station, kbb_servisis, kb_admin_edit, kb_main_one_button #kb_stop_admin
from database.reqests import add_station, get_stations, add_doctor, get_doctors, get_adress_doctor, get_anythink_station
from filters.filter import FilterNameDoctor, FilterNameStation
# from database.reqests import add_station

router = Router()

storage = MemoryStorage()

class FSMback(StatesGroup):
    state_parks = State()
    state_contact_location = State()
    state_servis = State()

class FSM_add_station(StatesGroup):
    state_add_new_park = State()
    state_add_phone = State()
    state_add_adress = State()

    state_add_link_lokation = State()

class FSM_add_doctor(StatesGroup):
    state_add_doctor = State()
    state_add_doctor_adress = State()

# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(CommandStart())
async def process_start_command(message: Message, state: FSMContext):
    await message.answer(text='üîù –ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é', reply_markup=kb_main())
    await state.set_state(default_state)

"""
# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É kb_stop_admin "–í—ã–π—Ç–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"
@router.message(F.text == '–í—ã–π—Ç–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"')
async def process_stop_admin(message: Message, state: FSMContext):
    await state.set_state(default_state)
    await message.answer(text='üîù –ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é', reply_markup=kb_main())
"""

# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ button_mane_menu –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ
@router.message(F.text == 'üîù –ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é')
async def process_but_menu(message: Message, state: FSMContext):
    await message.answer(text='üîù –ì–ª–∞–≤–Ω–æ–µ –ú–µ–Ω—é', reply_markup=kb_main())
    await state.set_state(default_state)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ button_back –ù–ê–ó–ê–î
@router.message(F.text == 'üîô –ù–∞–∑–∞–¥')
async def process_but_menu(message: Message, state: FSMContext):
    current_state = await state.get_state()
    if current_state == FSMback.state_parks:
        await process_start_command(message=message, state=state)
    if current_state == FSMback.state_contact_location:
        await process_but_1(message=message, state=state)
    if current_state == FSMback.state_servis:
        await process_start_command(message=message, state=state)


# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ button_admin –ê–î–ú–ò–ù–ò–°–¢–†–ò–†–û–í–ê–ù–ò–ï
@router.message(F.text == '–ü–µ—Ä–µ–π—Ç–∏ –≤ —Ä–µ–∂–∏–º "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"')
async def process_administrator(message: Message, state: FSMContext):
    await message.answer(text='–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ —Ä–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è', reply_markup=kb_admin_edit())
    await message.answer(text='–í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –ü–∞—Ä–∫ –∏–ª–∏ –∞–¥—Ä–µ—Å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ú–µ–¥–æ—Å–º–æ—Ç—Ä–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å –∏—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏.')


 #–≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø–∞—Ä–∫
@router.message(F.text == "–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –ü–∞—Ä–∫")
async def add_new_park(message: Message, state: FSMContext):
    await message.answer(text='–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ü–∞—Ä–∫–∞', reply_markup=kb_main_one_button)
    await state.set_state(FSM_add_station.state_add_new_park)


# –í–≤–æ–¥ –Ω–æ–≤–≥–æ –ø–∞—Ä–∫–∞, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–∫–∞, –ø–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
@router.message(FSM_add_station.state_add_new_park)
async def process_add_new_park(message: Message, state: FSMContext):
    await state.update_data(name_station=message.text)
    current_state = await state.get_data()
    await message.answer(text=f'–û—Ç–ª–∏—á–Ω–æ! –í—ã –¥–æ–±–∞–≤–∏–ª–∏ –ø–∞—Ä–∫: {current_state.get("name_station")} ')
    await state.set_state(FSM_add_station.state_add_phone)
    await message.answer(text='–ê —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', reply_markup=kb_main_one_button)



# –í–≤–æ–¥ —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –ø–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞
@router.message(FSM_add_station.state_add_phone)
async def process_add_phone(message: Message, state: FSMContext):
    await state.update_data(phone = message.text)
    current_state = await state.get_data()
    await message.answer(text=f'–û—Ç–ª–∏—á–Ω–æ! –í—ã –¥–æ–±–∞–≤–∏–ª–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {current_state.get("phone")} ')
    await state.set_state(FSM_add_station.state_add_adress)
    await message.answer(text="–ê —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –ü–∞—Ä–∫–∞", reply_markup=kb_main_one_button)

# –í–≤–æ–¥ –∞–¥—Ä–µ—Å–∞, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞, –ø–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º –∫–æ–º–µ–Ω—Ç–∞—Ä–∏—è –∫ –∞–¥—Ä–µ—Å—É
@router.message(FSM_add_station.state_add_adress)
async def process_add_adress(message: Message, state: FSMContext):
    await state.update_data(adress = message.text)
    current_state = await state.get_data()
    await message.answer(text=f'–û—Ç–ª–∏—á–Ω–æ! –í—ã –¥–æ–±–∞–≤–∏–ª–∏ –∞–¥—Ä–µ—Å: {current_state.get("adress")} ')
    await state.set_state(FSM_add_station.state_add_link_lokation)
    await message.answer(text='–í—Å—Ç–∞–≤—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –∫–∞—Ä—Ç—É —Å –∞–¥—Ä–µ—Å–æ–º –ü–∞—Ä–∫–∞. –î–ª—è —ç—Ç–æ–≥–æ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –µ—ë, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ø–Ω–¥–µ–∫—Å.–∫–∞—Ä—Ç—ã', reply_markup=kb_main_one_button)

# –í–≤–æ–¥ —Å—Å—ã–ª–∫–∏ –Ω–∞ –∫–∞—Ä—Ç—É, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ, –æ—á–∏—Å—Ç–∫–∞ —Ä–µ–∂–∏–º–∞ FSM
@router.message(FSM_add_station.state_add_link_lokation)
async def process_add_link_lokation(message: Message, state: FSMContext):
    await state.update_data(link_lokation = message.text)
    data = await state.get_data()
    current_state = {"name_station": data['name_station'], "phone": data['phone'], "adress": data['adress'], "link_lokation": data['link_lokation']}
    await message.answer(text=f'–û—Ç–ª–∏—á–Ω–æ! –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ä—Ç—É: {current_state.get('link_lokation')} ')
    await add_station(data=current_state)

    await state.clear()
    await message.answer(text='–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.\n–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è', reply_markup=kb_admin_edit())



#–≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å –∞–¥—Ä–µ—Å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –º–µ–¥–æ—Å–º–æ—Ç—Ä–∞"
@router.message(F.text == "–î–æ–±–∞–≤–∏—Ç—å –∞–¥—Ä–µ—Å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –º–µ–¥–æ—Å–º–æ—Ç—Ä–∞")
async def push_add_new_doctor(message: Message, state: FSMContext):
    await message.answer(text='–ù–∞–ø–∏—à–∏—Ç–µ –∫—Ä–∞—Ç–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–∞—Å—Ç–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –º–µ–¥–æ—Å–º–æ—Ç—Ä–∞', reply_markup=kb_main_one_button)
    await state.set_state(FSM_add_doctor.state_add_doctor)

# –í–≤–æ–¥ –Ω–æ–≤–æ–≥–æ –¥–æ–∫—Ç–æ—Ä–∞, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –¥–æ–∫—Ç–æ—Ä–∞, –ø–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º –æ–∂–∏–¥–∞–Ω–∏—è –≤–≤–æ–¥–∞ –∞–¥—Ä–µ—Å–∞ –¥–æ–∫—Ç–æ—Ä–∞
@router.message(FSM_add_doctor.state_add_doctor)
async def add_new_doctor(message: Message, state: FSMContext):
    await state.update_data(name_doctor=message.text)
    current_state = await state.get_data()
    await message.answer(text=f'–û—Ç–ª–∏—á–Ω–æ! –í—ã –¥–æ–±–∞–≤–∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –º–µ–¥–æ—Å–º–æ—Ç—Ä–∞: "{current_state.get('name_doctor')}" ',
                         reply_markup=kb_main_one_button)
    await state.set_state(FSM_add_doctor.state_add_doctor_adress)
    await message.answer(text='–ê —Ç–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –º–µ–¥–æ—Å–º–æ—Ç—Ä–∞')

# –í–≤–æ–¥ –∞–¥—Ä–µ—Å–∞ –º–µ–¥–æ—Å–º–æ—Ç—Ä–∞, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –º–µ–¥–æ—Å–º–æ—Ç—Ä–∞, –≤—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞
@router.message(FSM_add_doctor.state_add_doctor_adress)
async def add_new_doctor_adress(message: Message, state: FSMContext):
    await state.update_data(adress_doctor=message.text)
    data = await state.get_data()
    current_state = {"name_doctor": data['name_doctor'], "adress_doctor": data['adress_doctor']}
    await message.answer(text=f'–û—Ç–ª–∏—á–Ω–æ! –í—ã –¥–æ–±–∞–≤–∏–ª–∏ –∞–¥—Ä–µ—Å –Ω–æ–≤–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –º–µ–¥–æ—Å–º–æ—Ç—Ä–∞: "{current_state.get('adress_doctor')}" ')
    await add_doctor(data=current_state)
    await state.clear()
    await message.answer(text='–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.\n–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ —Ä–µ–∂–∏–º–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è', reply_markup=kb_admin_edit())



# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ button_1 –†–ê–ë–û–¢–ê –° –í–û–î–ò–¢–ï–õ–Ø–ú–ò (–ê–í–¢–û–ö–û–õ–û–ù–ù–ê)
@router.message(F.text == '–†–ê–ë–û–¢–ê –° –í–û–î–ò–¢–ï–õ–Ø–ú–ò (–ê–í–¢–û–ö–û–õ–û–ù–ù–ê)')
async def process_but_1(message: Message, state: FSMContext):
    stations = [station for station in await get_stations()]
    await message.answer(text='–í—ã–±–µ—Ä–µ—Ç–µ –ø–∞—Ä–∫, –≥–¥–µ –ø–æ–ª—É—á–∞–ª–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏:', reply_markup=kb_b_stations(stations))
    await state.set_state(FSMback.state_parks)


    # –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏  –∫–Ω–æ–ø–∫–∏ button_nnn –ü–ê–†–ö–ò
#@router.message(lambda x: x.text in ['–ö–∏—Ä–æ–≤—Å–∫–∏–π –∑–∞–≤–æ–¥', '–ú–∞—Ä—à–∞–ª–∞ –ñ—É–∫–æ–≤–∞', '–†—ã–±–∞—Ü–∫–∏–π –ø—Ä–æ–µ–∑–¥', '–û–ø—Ç–∏–∫–æ–≤', '–ö—É–±–∞—Ç—É—Ä–∞', '–ó–≤—ë–∑–¥–Ω–∞—è', '–ö—É—à–µ–ª–µ–≤—Å–∫–∞—è –¥–æ—Ä–æ–≥–∞'])
@router.message(FilterNameStation())
async def process_push_park_button(message: Message, state: FSMContext):
    await message.answer(text=f'–í—ã–±—Ä–∞–Ω–∞ –ø–ª–æ—â–∞–¥–∫–∞ "{message.text}"', reply_markup=kb_contact_location_station(message.text))
    await state.set_state(FSMback.state_contact_location)

# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ but_nnn –ö–æ–Ω—Ç–∞–∫—Ç—ã "............."

@router.message(lambda message: '–ö–æ–Ω—Ç–∞–∫—Ç—ã' in message.text)
async def process_push_contacts(message: Message):
    station = await get_anythink_station(name_station=message.text.split(sep=' ', maxsplit=1)[1].replace('"', ''))
    await message.answer(text=f'{station.phone}')



@router.message(lambda message: '–õ–æ–∫–∞—Ü–∏—è' in message.text)
async def process_push_contacts(message: Message):
    station = await get_anythink_station(name_station=message.text.split(sep=' ', maxsplit=1)[1].replace('"', ''))
    await message.answer(text=f'{station.adress}\n'
                        f'{station.link_lokation}')




# –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ button_2 –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ô –û–¢–î–ï–õ (–ü–æ–ª–æ–º–∫–∞ –∞–≤—Ç–æ)
@router.message(F.text == '–¢–ï–•–ù–ò–ß–ï–°–ö–ò–ô –û–¢–î–ï–õ (–ü–æ–ª–æ–º–∫–∞ –∞–≤—Ç–æ)')
async def process_button_2(message: Message):
    await message.answer(text=f'–ó–≤–æ–Ω–∫–∏ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è: —Å 09:00-18:00\n\n'
                              f'+7952247629 (—Ç–µ—Ö.–Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å)\n\n'
                              f'+7904337942¬† (—Ç–µ—Ö.–Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ—Å—Ç—å)\n\n'
                              f'+7904556180 (–ø–ª–∞–Ω–æ–≤–æ–µ –¢–û, –ì–†–ú, —Å–µ–∑–æ–Ω–Ω—ã–π —à–∏–Ω–æ–º–æ–Ω—Ç–∞–∂)\n\n'
                              f'–ü–æ—Å–ª–µ 18:00- —Å–æ–æ–±—â–µ–Ω–∏–µ WhatsApp. (–≥–æ—Å.–Ω–æ–º–µ—Ä –ê/–ú, –§–ò–û, –ø—Ä–æ–±–ª–µ–º–∞) –í–∞–º –ø–µ—Ä–µ–∑–≤–æ–Ω—è—Ç,–≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è.')


   # –≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ button_3 –ù–û–ß–ù–ê–Ø –¢–ï–• –°–õ–ï–ñ–ë–ê
@router.message(F.text == '–ù–û–ß–ù–ê–Ø –¢–ï–• –°–õ–£–ñ–ë–ê')
async def process_button_3(message: Message):
    await message.answer(text='–ó–í–û–ù–ò–¢–¨ –° 18:00 –î–û 09.00\n\n–¢–ï–õ: +7904556169\n–ó–í–û–ù–ò–¢–¨ –ü–û –¢–ï–•–ù–ò–ß–ï–°–ö–ò–ú –í–û–ü–†–û–°–ê–ú.')


  #–≠—Ç–æ—Ç —Ö—ç–Ω–¥–ª–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ button –°–ï–†–í–ò–°–´
@router.message(F.text == '–°–ï–†–í–ò–°–´')
async def process_servises(message: Message, state: FSMContext):
    await message.answer(text='–°–ï–†–í–ò–°–´', reply_markup=kbb_servisis())
    await state.set_state(FSMback.state_servis)

@router.message(F.text == '–°–µ—Ä–≤–∏—Å –¢–∞–∫—Å–æ–º–æ—Ç–æ—Ä')
async def process_servis_taksomotor(message: Message):
    await message.answer_video(video='BAACAgIAAxkBAAICBWbLAbTYGmN3ZiI54joJux6bxAJzAAJXVAAC5UBYSlKPU3JwX0b1NQQ')
    await message.answer(text='https://yandex.ru/navi/10174/saint-petersburg-and-leningrad-oblast/house/polevaya_ulitsa_5b/Z0kYcwdnQUIDQFtjfXR1eXlnZw==/?from=navi&lang=ru&ll=30.507874%2C59.848543&z=16.4')
    await message.answer(text='–ü–æ–ª–µ–≤–∞—è —É–ª–∏—Ü–∞, 5–ë\n–¥–µ—Ä–µ–≤–Ω—è –ù–æ–≤–æ—Å–∞—Ä–∞—Ç–æ–≤–∫–∞, –°–≤–µ—Ä–¥–ª–æ–≤—Å–∫–æ–µ –≥–æ—Ä–æ–¥—Å–∫–æ–µ –ø–æ—Å–µ–ª–µ–Ω–∏–µ, –í—Å–µ–≤–æ–ª–æ–∂—Å–∫–∏–π —Ä–∞–π–æ–Ω, –õ–µ–Ω–∏–Ω–≥—Ä–∞–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å')
    await message.answer(text='–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–ø–∏—Å–∏:\n+7994408913\n\n+7992164328')

@router.message(F.text == '–®–∏–Ω–æ–º–æ–Ω—Ç–∞–∂')
async def process_servis_shynomontag(message: Message):
    await message.answer(text=f'–ü–æ–ª–µ–≤–∞—è —É–ª–∏—Ü–∞, 5–ë\n\n'
                         f'https://yandex.ru/navi/10174/saint-petersburg-and-leningrad-oblast/house/polevaya_ulitsa_5b/Z0kYcwdnQUIDQFtjfXR1eXlnZw==/?from=navi&lang=ru&ll=30.507874%2C59.848543&z=16.4')


@router.message(F.text == '–î–¢–ü')
async def process_DTP(message: Message):
    await message.answer(text=f'+7992175999\n\n+7904337943')

@router.message(F.text == '–ì–†–ê–§–ò–ö –†–ê–ë–û–¢–´ –ü–ê–†–ö–ê')
async def process_DTP(message: Message):
    await message.answer(text=f'–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –ü—è—Ç–Ω–∏—Ü–∞ —Å 09:00-18:00\n'
                         f'–°—É–±–±–æ—Ç–∞ (—Ç–æ–ª—å–∫–æ –≤—ã–¥–∞—á–∞) —Å 10:00-17:00\n'
                         f'–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ - –í–´–•–û–î–ù–û–ô')

@router.message(F.text == '–ü—É—Ç–µ–≤–æ–π –ª–∏—Å—Ç "–ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è" (–æ–±—Ä–∞–∑–µ—Ü)')
async def process_putevoi_list(message: Message):
    await message.answer_photo(photo='AgACAgIAAxkBAAICGWbLCRZmcDKj2qJYvBsLZiT009DdAAJY5zEb5UBYSui78qTOrrsDAQADAgADeQADNQQ')

# —ç—Ç–æ—Ç —Ä–æ—É—Ç–µ—Ä —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –ú–ï–î–ò–ö–ò
@router.message(F.text == '–ú–ï–î–ò–ö–ò')
async def process_doctor(message: Message):
    doctors = [doctor for doctor in await get_doctors()]
    await message.answer(text='–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –º–µ–¥–æ—Å–º–æ—Ç—Ä–∞:', reply_markup=kb_b_doctors(doctors))

@router.message(FilterNameDoctor())
async def process_doctor_show_adress(message: Message):
    doctor = await get_adress_doctor(name_doctor=message.text)

    await message.answer(text=f'{doctor.adress_doctor}')








#button_8 = KeyboardButton(text='–ú–ï–î–ò–ö–ò')
#button_9 = KeyboardButton(text='–¢–ê–ë–õ–ò–¶–ê –®–¢–†–ê–§–û–í')
#button_10 = KeyboardButton(text='–ì–æ—Å. —Ç–µ—Ö. –æ—Å–º–æ—Ç—Ä')
#button_11 = KeyboardButton(text='–ú–ï–¢–ê–ù')